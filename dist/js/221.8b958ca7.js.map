{"version":3,"file":"js/221.8b958ca7.js","mappings":"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","sources":["webpack://moodle-student/./src/views/site/student/test/exams.vue","webpack://moodle-student/src/views/site/student/test/exams.vue","webpack://moodle-student/./src/views/site/student/test/exams.vue?0758","webpack://moodle-student/./src/views/site/student/test/exams.vue?0384"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('div',{staticClass:\"exam-list\"},[_c('div',{staticClass:\"card\"},[_c('div',{staticClass:\"card-content\"},[_c('div',{staticClass:\"card-body\"},[_c('div',{staticClass:\"table-responsive\"},[_c('table',{staticClass:\"table table-hover mb-0\"},[_vm._m(0),_c('transition',{attrs:{\"name\":\"fade\",\"duration\":2000}},[_c('tbody',{staticClass:\"table-bordered\"},[_vm._l((_vm.examList),function(item,index){return _c('tr',{key:index},[_c('td',[_vm._v(\" \"+_vm._s(index + 1)+\". \"+_vm._s(item.exam.name)+\". \"+_vm._s(item.exam.curriculum.name)+\" \")]),_c('td',[_vm._v(\" \"+_vm._s(item.exam.max_score)+\" \")]),_c('td',[_vm._v(\" \"+_vm._s(_vm.$moment(item.exam.begin_time).format(\"YYYY-MM-DD HH:ss\"))+\" \"),_c('br'),_vm._v(\" \"+_vm._s(_vm.$moment(item.exam.end_time).format(\"YYYY-MM-DD HH:ss\"))+\" \")]),_c('td',[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.is_start && item.is_finish),expression:\"item.is_start && item.is_finish\"}],staticClass:\"btn btn-success w-100\",attrs:{\"disabled\":!item.is_active || !item.exam.exam_status},on:{\"click\":function($event){return _vm.goToTest(item.exam.id, item.id)}}},[_vm._v(\" Boshlash \")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(item.is_start && !item.is_finish),expression:\"item.is_start && !item.is_finish\"}],staticClass:\"btn btn-success w-100\",attrs:{\"disabled\":!item.is_active || !item.exam.exam_status},on:{\"click\":function($event){return _vm.goToTestCheck(item.exam.id)}}},[_vm._v(\" Davom etish \")])])])}),(_vm.errorMessage !== '')?_c('tr',[_c('td',{staticClass:\"text-center\",attrs:{\"colspan\":\"5\"}},[_vm._v(\" \"+_vm._s(_vm.errorMessage)+\" \")])]):_vm._e()],2)])],1)])])])])])\n}\nvar staticRenderFns = [function (){var _vm=this,_c=_vm._self._c;return _c('thead',[_c('tr',[_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Nomi\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Maks ball\")]),_c('th',{attrs:{\"scope\":\"col\"}},[_vm._v(\"Test davri\")]),_c('th')])])\n}]\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"exam-list\">\r\n    <div class=\"card\">\r\n      <div class=\"card-content\">\r\n        <div class=\"card-body\">\r\n          <div class=\"table-responsive\">\r\n            <table class=\"table table-hover mb-0\">\r\n              <thead>\r\n              <tr>\r\n                <th scope=\"col\">Nomi</th>\r\n                <th scope=\"col\">Maks ball</th>\r\n                <th scope=\"col\">Test davri</th>\r\n                <th></th>\r\n              </tr>\r\n              </thead>\r\n              <transition name=\"fade\" :duration=\"2000\">\r\n                <tbody class=\"table-bordered\">\r\n                <tr v-for=\"(item, index) in examList\" :key=\"index\">\r\n                  <td>\r\n                    {{ index + 1 }}. {{ item.exam.name }}.\r\n                    {{ item.exam.curriculum.name }}\r\n                  </td>\r\n\r\n                  <td>\r\n                    {{ item.exam.max_score }}\r\n                  </td>\r\n                  <td>\r\n                    {{\r\n                      $moment(item.exam.begin_time).format(\"YYYY-MM-DD HH:ss\")\r\n                    }}\r\n                    <br/>\r\n                    {{\r\n                      $moment(item.exam.end_time).format(\"YYYY-MM-DD HH:ss\")\r\n                    }}\r\n                  </td>\r\n                  <td>\r\n\r\n                      <button\r\n                          :disabled=\"!item.is_active || !item.exam.exam_status\"\r\n                          v-show=\"item.is_start && item.is_finish\"\r\n                          class=\"btn btn-success w-100\"\r\n                          @click=\"goToTest(item.exam.id, item.id)\"\r\n                      >\r\n                        Boshlash\r\n                      </button>\r\n                      <button :disabled=\"!item.is_active || !item.exam.exam_status\" @click=\"goToTestCheck(item.exam.id)\"\r\n                              class=\"btn btn-success w-100\" v-show=\"item.is_start && !item.is_finish\">\r\n                        Davom etish\r\n                      </button>\r\n\r\n<!--                    <button-->\r\n<!--                        v-show=\"item.is_finish\"-->\r\n<!--                        class=\"btn btn-success w-100\"-->\r\n<!--                        @click=\"goResult(item.exam.id, item.id)\"-->\r\n<!--                    >-->\r\n<!--                      Natija-->\r\n<!--                    </button>-->\r\n                  </td>\r\n                </tr>\r\n                <tr v-if=\"errorMessage !== ''\">\r\n                  <td class=\"text-center\" colspan=\"5\">\r\n                    {{ errorMessage }}\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n\r\n              </transition>\r\n\r\n            </table>\r\n\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {mapActions, mapGetters} from \"vuex\";\r\n\r\n\r\nexport default {\r\n  name: \"exam-list\",\r\n\r\n\r\n  data() {\r\n    return {\r\n      examList: [],\r\n      errorMessage: \"\",\r\n      student_id: null,\r\n      ip_address: ''\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"getUser\"]),\r\n    getExamList() {\r\n      this.loading = true;\r\n      this.$http\r\n          .get(`exam-list/${this.student_id}`)\r\n          .then((res) => {\r\n            this.examList = res;\r\n            console.log(res)\r\n          })\r\n          .catch((err) => {\r\n            this.errorMessage = err.response.data.message;\r\n          })\r\n          .finally(() => {\r\n            this.loading = false;\r\n          });\r\n    },\r\n    goToTest(exam_id) {\r\n\r\n      this.$http.get(`check-attempts/${this.student_id}/for/${exam_id}`).then((res)=>{\r\n        if(res.status){\r\n          this.$router.push({\r\n            name: \"test\",\r\n            params: {exam_id: exam_id},\r\n          });\r\n        }\r\n\r\n      }).catch(()=>{\r\n\r\n      })\r\n\r\n\r\n    },\r\n    goToTestCheck(exam_id) {\r\n      this.$http.post(\"check-continue/\", {\r\n        exam: exam_id,\r\n        student: this.student_id,\r\n        ip_address: this.ip_address\r\n      }).then(() => {\r\n        this.$router.push({\r\n          name: \"test\",\r\n          params: {exam_id: exam_id},\r\n        });\r\n      }).catch((err) => {\r\n        this.notificationMessage(err.response.data.message, \"error\");\r\n      })\r\n    },\r\n\r\n    async fetchLocalIPAddress() {\r\n      try {\r\n        const ipAddress = await this.getIPAddressViaWebRTC();\r\n        if (ipAddress) {\r\n          return ipAddress;\r\n        }\r\n        const localIPAddress = await this.getIPAddressViaService();\r\n        if (localIPAddress) {\r\n          return localIPAddress;\r\n        }\r\n        return null;\r\n      } catch (error) {\r\n        console.error(\"Error fetching local IP address:\", error);\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async getIPAddressViaWebRTC() {\r\n      return new Promise((resolve) => {\r\n        window.RTCPeerConnection =\r\n            window.RTCPeerConnection ||\r\n            window.mozRTCPeerConnection ||\r\n            window.webkitRTCPeerConnection;\r\n\r\n        const pc = new RTCPeerConnection();\r\n\r\n        pc.createDataChannel(\"\");\r\n\r\n        pc.createOffer().then((offer) => {\r\n          pc.setLocalDescription(offer);\r\n        });\r\n\r\n        pc.onicecandidate = (e) => {\r\n          if (e && e.candidate && e.candidate.candidate) {\r\n            const ipRegex = /\\d+\\.\\d+\\.\\d+\\.\\d+/;\r\n            const match = ipRegex.exec(e.candidate.candidate);\r\n\r\n            if (match) {\r\n              const ipAddress = match[0];\r\n              resolve(ipAddress);\r\n            }\r\n          }\r\n          pc.onicecandidate = null;\r\n          pc.close();\r\n        };\r\n      });\r\n    },\r\n\r\n    async getIPAddressViaService() {\r\n      try {\r\n        const response = await fetch(\"https://api.ipify.org?format=json\");\r\n        const data = await response.json();\r\n        return data.ip;\r\n      } catch (error) {\r\n        console.error(\"Error fetching IP address via service:\", error);\r\n        return null;\r\n      }\r\n    },\r\n\r\n    goResult(exam_id) {\r\n      this.$router.push({\r\n        name: \"test-result-one\",\r\n        params: {student_id: this.user.id, exam_id: exam_id},\r\n      });\r\n    },\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"user\"]),\r\n  },\r\n  async mounted() {\r\n    this.fetchLocalIPAddress().then((ipAddress) => {\r\n      this.ip_address = ipAddress\r\n    });\r\n    await this.getUser();\r\n    this.student_id = this.user.id;\r\n    localStorage.setItem(\"student_id\", this.student_id)\r\n    await this.getExamList();\r\n  },\r\n\r\n  created() {\r\n  },\r\n\r\n};\r\n</script>\r\n\r\n<style lang=\"scss\" scoped></style>\r\n","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./exams.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./exams.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./exams.vue?vue&type=template&id=7a8530ed&scoped=true&\"\nimport script from \"./exams.vue?vue&type=script&lang=js&\"\nexport * from \"./exams.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"7a8530ed\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","_m","attrs","_l","examList","item","index","key","_v","_s","exam","name","curriculum","max_score","$moment","begin_time","format","end_time","directives","rawName","value","is_start","is_finish","expression","is_active","exam_status","on","$event","goToTest","id","goToTestCheck","errorMessage","_e","staticRenderFns","data","student_id","ip_address","methods","mapActions","getExamList","loading","$http","get","then","res","console","log","catch","err","response","message","finally","exam_id","status","$router","push","params","post","student","notificationMessage","fetchLocalIPAddress","ipAddress","getIPAddressViaWebRTC","localIPAddress","getIPAddressViaService","error","Promise","resolve","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","pc","createDataChannel","createOffer","offer","setLocalDescription","onicecandidate","e","candidate","ipRegex","match","exec","close","fetch","json","ip","goResult","user","computed","mapGetters","mounted","getUser","localStorage","setItem","created","component"],"sourceRoot":""}