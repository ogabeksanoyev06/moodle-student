{"version":3,"file":"js/973.f8337f4e.js","mappings":"wKAAA,IAAIA,EAAS,WAAkB,IAAIC,EAAIC,KAAKC,EAAGF,EAAIG,MAAMD,GAAG,OAAOA,EAAG,UAAU,CAACA,EAAG,MAAM,CAACE,YAAY,QAAQ,CAACF,EAAG,MAAM,CAACE,YAAY,aAAa,CAACF,EAAG,SAAS,CAACG,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAO,EAAOC,WAAW,UAAUC,MAAM,CAAC,MAAQ,MAAM,OAAS,MAAM,GAAK,UAAUR,EAAG,QAAQ,CAACG,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAO,EAAOC,WAAW,UAAUE,IAAI,QAAQD,MAAM,CAAC,MAAQ,MAAM,OAAS,MAAM,SAAW,MAAMR,EAAG,SAAS,CAACG,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAO,EAAOC,WAAW,UAAUE,IAAI,SAASD,MAAM,CAAC,MAAQ,MAAM,OAAS,SAASR,EAAG,MAAM,CAACG,WAAW,CAAC,CAACC,KAAK,OAAOC,QAAQ,SAASC,OAAO,EAAOC,WAAW,UAAUE,IAAI,YAAYD,MAAM,CAAC,GAAK,YAAY,IAAM,gBAAgBR,EAAG,MAAM,CAACS,IAAI,WAAWP,YAAY,aAAa,CAACF,EAAG,MAAM,CAACE,YAAY,gBAAgBJ,EAAIY,GAAIZ,EAAIa,WAAW,SAASC,EAASC,GAAG,OAAOb,EAAG,MAAM,CAACc,IAAID,EAAEJ,IAAI,YAAcI,EAAEE,UAAS,EAAKb,YAAY,iBAAiB,CAACF,EAAG,MAAM,CAACE,YAAY,4BAA4B,CAACF,EAAG,UAAU,CAACQ,MAAM,CAAC,KAAO,GAAG,OAAS,MAAM,CAACR,EAAG,OAAO,CAACgB,SAAS,CAAC,UAAYlB,EAAImB,GAAGL,EAASR,YAAY,GAAGJ,EAAG,KAAK,CAACE,YAAY,qBAAqBJ,EAAIY,GAAIE,EAASM,SAAS,SAASC,EAAKC,GAAG,OAAOpB,EAAG,KAAK,CAACc,IAAIM,EAAEC,MAAMF,EAAKG,YAC5rC,4BACA,qBAAqBC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO1B,EAAI2B,aAAab,EAASc,GAAIP,EAAKO,GAAG,IAAI,CAAC1B,EAAG,UAAU,CAACE,YAAY,OAAOM,MAAM,CAAC,KAAOV,EAAI6B,SAAW,GAAK,GAAG,cAAc7B,EAAI6B,SAAW,GAAK,GAAG,OAAS,QAAQ,CAAC7B,EAAI8B,GAAG,IAAI9B,EAAImB,GAAGnB,EAAI+B,aAAaT,GAAK,KAAK,OAAOpB,EAAG,UAAU,CAACQ,MAAM,CAAC,MAAOV,EAAI6B,SAAW,IAAQ,cAAc7B,EAAI6B,SAAW,GAAK,GAAG,OAAS,QAAQ,CAAC3B,EAAG,OAAO,CAACgB,SAAS,CAAC,UAAYlB,EAAImB,GAAGE,EAAKf,YAAY,EAAE,IAAG,IAAI,IAAG,OAAOJ,EAAG,MAAM,CAACE,YAAY,cAAc,CAACF,EAAG,MAAM,CAACE,YAAY,uBAAuB,CAACF,EAAG,OAAO,CAAC8B,YAAY,CAAC,YAAY,SAAS,YAAY,QAAQ,OAAS,oBAAoB,MAAQ,UAAU,QAAU,WAAW,CAAChC,EAAI8B,GAAG,IAAI9B,EAAImB,GAAGnB,EAAIiC,YAAYjC,EAAIkC,YAAY,OAAOhC,EAAG,SAAS,CAACE,YAAY,iBAAiB4B,YAAY,CAAC,MAAQ,0BAA0BP,GAAG,CAAC,MAAQzB,EAAImC,eAAe,CAACnC,EAAI8B,GAAG,gBAAgB5B,EAAG,KAAK,CAACE,YAAY,mBAAmBJ,EAAIY,GAAIZ,EAAIa,WAAW,SAASC,EAASsB,GAAO,OAAOlC,EAAG,KAAK,CAACc,IAAIoB,EAAMb,MAAMT,EAASU,YACp/B,8BACA,uBAAuBC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAO1B,EAAIqC,iBAAiBD,EAAM,IAAI,CAACpC,EAAI8B,GAAG,IAAI9B,EAAImB,GAAGiB,EAAQ,GAAG,MAAM,IAAG,GAAGlC,EAAG,MAAM,CAACE,YAAY,0BAA0B,CAACF,EAAG,SAAS,CAACuB,GAAG,CAAC,MAAQzB,EAAIsC,iBAAiB,CAACtC,EAAI8B,GAAG,qBAAqB5B,EAAG,WAAW,CAACqB,MAAM,CAAEgB,QAASvC,EAAIwC,WAAY9B,MAAM,CAAC,MAAQ,KAAKe,GAAG,CAAC,MAAQzB,EAAIyC,YAAYC,YAAY1C,EAAI2C,GAAG,CAAC,CAAC3B,IAAI,cAAc4B,GAAG,WAAW,MAAO,CAAC5C,EAAI8B,GAAG,gCAAgC,EAAEe,OAAM,GAAM,CAAC7B,IAAI,YAAY4B,GAAG,WAAW,MAAO,CAAC1C,EAAG,MAAM,CAACE,YAAY,UAAUqB,GAAG,CAAC,MAAQzB,EAAIyC,aAAa,CAACvC,EAAG,SAAS,CAACE,YAAY,kBAAkB,CAACJ,EAAI8B,GAAG,UAAU5B,EAAG,SAAS,CAACE,YAAY,kBAAkBqB,GAAG,CAAC,MAAQzB,EAAI8C,aAAa,CAAC9C,EAAI8B,GAAG,UAAU,EAAEe,OAAM,OAAU3C,EAAG,MAAM,CAACE,YAAY,UAAUmB,MAAM,CAAEgB,QAASvC,EAAIwC,WAAYf,GAAG,CAAC,MAAQzB,EAAIyC,eAAe,EACh1B,EACIM,EAAkB,G,uCC2GtB,GACAC,WAAA,CAAAC,SAAAA,EAAAA,GACA3C,KAAA,UACA4C,IAAAA,GACA,OACArC,UAAA,GACAsC,OAAA,GACAC,QAAA,GACAC,YAAA,KACAC,WAAA,GACAC,WAAA,GACAxB,aAAA,kCACAG,UAAA,EACAsB,QAAA,EACAhB,WAAA,EACAiB,aAAA,KACAC,iBAAA,EACAC,eAAA,EACAC,eAAA,EACAC,YAAA,KAEA,EACAC,QAAA,KACAC,EAAAA,EAAAA,IAAA,aACA1B,gBAAAA,CAAAD,GACA,MAAA4B,EAAA,KAAAC,MAAA,YAAA7B,GAAA,GACA4B,GACAA,EAAAE,eAAA,CAAAC,SAAA,WAEA,KAAAX,QAAApB,CACA,EAEA,iBAAAgC,GACA,KAAAC,SAAA,QACA,KAAAC,MACAC,KAAA,eACAC,KAAA,KAAApB,QACAE,WAAA,KAAAA,WACAmB,QAAA,KAAAlB,aAEAmB,MAAAC,IACAA,EAAAC,SAAAC,IACA,IAAAC,EAAA,CACAlD,GAAAiD,EAAAjD,GACAtB,KAAAuE,EAAAvE,KACAc,QAAAyD,EAAAzD,QAAA2D,KAAAC,IAAA,IACAA,EACAxD,aAAA,MAEAA,aAAA,GAEA,KAAAX,UAAAoE,KAAAH,EAAA,GACA,IAEAI,OAAAC,IACA,KAAAC,oBAAAD,EAAAR,SAAAzB,KAAAmC,QAAA,YAEAC,SAAA,KACA,KAAAjB,SAAA,IAEA,EACA,kBAAAkB,GACA,MAAAC,EAAA,CACAhB,KAAA,KAAApB,QACAqB,QAAA,KAAAlB,WACAkC,MAAA,KAAAC,KAAAD,MAAA7D,GACA0B,WAAA,KAAAA,WACAqC,SAAA,KAAAtC,YAAAsC,SACAC,YAAA,KAAAvC,YAAAuC,YACAC,UAAA,KAAAxC,YAAAwC,UACAC,UAAA,EACAC,UAAA,KAAA1C,YAAA0C,iBAEA,KAAAzB,MACAC,KAAA,gBAAAiB,GACAd,MAAAsB,IACAC,QAAAC,IAAA,MAAAF,GACA,KAAA9D,UAAAiE,KAAAC,IAAAJ,EAAAK,iBAAA,IAEAnB,OAAAC,IACA,GAAAA,EAAAR,UAAAQ,EAAAR,SAAAzB,KAAA,CACA,MAAAoD,EAAAnB,EAAAR,SAAAzB,KACA,UAAAlC,KAAAsF,EACA,GAAAC,OAAAC,eAAAC,KAAAH,EAAAtF,GAAA,CACA,MAAA0F,EAAAJ,EAAAtF,GACA,KAAAoE,oBACA,GAAApE,MAAA0F,EAAAC,KAAA,QACA,QAEA,CAEA,KAEArB,SAAA,QACA,EACAsB,UAAAA,GACA,KAAAtC,MACAuC,IACA,mCAAAzD,eAAA,KAAAG,eAEAmB,MAAAsB,IACA,KAAA7C,OAAA6C,EAAA9C,KACA,KAAA4D,eAAA,IAEA5B,OAAAC,IACAc,QAAAC,IAAAf,EAAA,GAEA,EACA,mBAAA4B,SACA,KAAAzC,MACAuC,IAAA,oBAAAzD,WACAsB,MAAAsB,IACA,KAAA3C,YAAA2C,CAAA,IAEAd,OAAA,SACAI,SAAA,QACA,EACA0B,QAAAA,GACA,IAAAC,EAAA,KACAC,EAAAC,aAAA,WACA,GAAAF,EAAA/E,UAAA,MAGA,OAFA+E,EAAAnE,kBACAsE,cAAAF,GAGAD,EAAA/E,WACA,OACA,EACAD,WAAAA,CAAAoF,GACA,IAAAC,EAAAC,SAAAF,EAAA,IACAG,EAAArB,KAAAsB,MAAAH,EAAA,MACAI,EAAAvB,KAAAsB,OAAAH,EAAA,KAAAE,GAAA,IACAG,EAAAL,EAAA,KAAAE,EAAA,GAAAE,EAWA,OATAF,EAAA,KACAA,EAAA,IAAAA,GAEAE,EAAA,KACAA,EAAA,IAAAA,GAEAC,EAAA,KACAA,EAAA,IAAAA,GAEAH,EAAA,IAAAE,EAAA,IAAAC,CACA,EAkCA,yBAAAC,GACA,IACA,MAAAC,QAAA,KAAAC,wBACA,GAAAD,EACA,OAAAA,EAEA,MAAAE,QAAA,KAAAC,yBACA,OAAAD,GAGA,IACA,OAAAE,GAEA,OADAhC,QAAAgC,MAAA,mCAAAA,GACA,IACA,CACA,EAEA,2BAAAH,GACA,WAAAI,SAAAC,IACAC,OAAAC,kBACAD,OAAAC,mBACAD,OAAAE,sBACAF,OAAAG,wBAEA,MAAAC,EAAA,IAAAH,kBAEAG,EAAAC,kBAAA,IAEAD,EAAAE,cAAAhE,MAAAiE,IACAH,EAAAI,oBAAAD,EAAA,IAGAH,EAAAK,eAAAC,IACA,GAAAA,GAAAA,EAAAC,WAAAD,EAAAC,UAAAA,UAAA,CACA,MAAAC,EAAA,qBACAC,EAAAD,EAAAE,KAAAJ,EAAAC,UAAAA,WAEA,GAAAE,EAAA,CACA,MAAApB,EAAAoB,EAAA,GACAd,EAAAN,EACA,CACA,CAGAW,EAAAK,eAAA,KACAL,EAAAW,OAAA,CACA,GAEA,EAEA,4BAAAnB,GACA,IAEA,MAAArD,QAAAyE,MAAA,qCACAlG,QAAAyB,EAAA0E,OAGA,OAAAnG,EAAAoG,EACA,OAAArB,GAEA,OADAhC,QAAAgC,MAAA,yCAAAA,GACA,IACA,CACA,EACAsB,iBAAAA,GAEA,QAAA9F,aAAA,CACA,MAAA+F,EAAA,KAAA/F,aAAAgG,YACAD,EAAA5E,SAAA8E,GAAAA,EAAAC,SACA,KAAAhG,eAAA,EACAsC,QAAAC,IAAA,gCACA,CACA,EACAvE,YAAAA,CAAAiI,EAAAC,GACA,KAAAjC,sBAAAlD,MAAAmD,IACA,KAAAvE,WAAAuE,CAAA,IAEA,KAAAvD,MACAwF,MAAA,6BAAA1G,eAAA,KAAAG,cAAA,CACAzC,SAAA8I,EACApI,YAAAqI,EACAvG,WAAA,KAAAA,aAEAoB,MAAAsB,IACA,KAAA7C,OAAA6C,EACA,KAAAc,gBACAb,QAAAC,IAAA,KAAArF,WACAoF,QAAAC,IAAAF,EAAA,IAEAd,OAAAC,IACAc,QAAAC,IAAAf,EAAA,IAEAG,SAAA,QACA,EACAwB,aAAAA,GACA,KAAA3D,OAAAyB,SAAAmF,IACA,MAAAH,EAAAG,EAAAjJ,SACA+I,EAAAE,EAAAvI,YACAwI,EAAA,KAAAnJ,UAAAoJ,MACAlJ,GAAAA,EAAAa,KAAAgI,IAEA,GAAAI,EAAA,CACAA,EAAAxI,aAAA,EACAwI,EAAA5I,QAAAwD,SAAAI,IACAA,EAAAxD,aAAA,KAEA,MAAA0I,EAAAF,EAAA5I,QAAA6I,MACA3I,GAAAA,EAAAM,KAAAiI,IAEAK,IACAA,EAAA1I,aAAA,EAEA,IAEA,EACAsB,UAAAA,GACA,KAAAwB,MACAuC,IAAA,oBAAAzD,kBAAA,KAAAG,eACAmB,MAAA,KACA,KAAAyF,QAAAlF,KAAA,CACA3E,KAAA,cACA,IAEA4E,OAAAC,IACAc,QAAAC,IAAAf,EAAA,GAEA,EAEA1C,UAAAA,GACA,KAAAD,WAAA,EACA4H,SAAAC,KAAAC,MAAAC,UAAA,QACA,EACAjI,cAAAA,GACA,KAAAE,WAAA,EACA4H,SAAAC,KAAAC,MAAAC,UAAA,QACA,EACApI,YAAAA,GACA,KAAAmC,MACAC,KAAA,iBACAC,KAAA,KAAApB,QACAqB,QAAA,KAAAlB,aAEAmB,MAAA,KACA,KAAAyF,QAAAlF,KAAA,CACA3E,KAAA,cACA,IAEA4E,OAAA,QACA,EACAsF,YAAAA,GACA,KAAAlG,MACAC,KAAA,iBACAC,KAAA,KAAApB,QACAqB,QAAA,KAAAlB,aAEAmB,MAAA,SAGAQ,OAAA,QACA,EACAuF,kBAAAA,CAAAC,GAEA,MAAAxH,EAAA,CACAsB,KAAA,KAAApB,QACAqB,QAAA,KAAAlB,YAGAoH,EAAA,IAAAC,KAAA,CAAAC,KAAAC,UAAA5H,IAAA,CACA6H,KAAA,qBAIA,GAFAC,UAAAC,WAAA,2CAAAN,GACAD,EAAAQ,iBACA,KAAAvH,cAAA,CACA,MAAAwH,EAAA,oEAEA,OADAT,EAAAU,YAAAD,EACAA,CACA,CACA,EACA,wBAAAE,GACA,IACA,MAAAC,EAAA,CACAC,MAAA,CACAC,YAAA,SACAC,eAAA,YAGAT,UAAAU,aAAAC,gBACAX,UAAAU,aAAAC,gBAAAL,GAAA5G,MAAAkH,IACAA,EAAAC,iBAAA,iBACA,KAAAlI,eAAA,EACAsC,QAAAC,IAAA,wCAEA,KAAAvC,eAAA,EACA,KAAAF,aAAAmI,EACA,KAAAE,iBAAA,IACA5G,OAAA+C,IACAhC,QAAAC,IAAA+B,EAAA,IAGA+C,UAAAW,gBAAAL,GAAA5G,MAAAkH,IACAA,EAAAC,iBAAA,iBACA,KAAAlI,eAAA,EACAsC,QAAAC,IAAA,wCAEA,KAAAvC,eAAA,EACA,KAAAF,aAAAmI,EACA,KAAAE,iBAAA,IACA5G,OAAA+C,IACAhC,QAAAC,IAAA+B,EAAA,IAIAG,OAAAyD,iBAAA,oBAAApB,mBACA,OAAAxC,GACAhC,QAAAgC,MAAA,0BAAAA,EAAA5C,SAAA4C,EACA,CACA,EACA,oBAAA8D,GACA,IACA,MAAArC,EAAA,KAAAjG,aAAAuI,iBAAA,GACAC,EAAA,IAAAC,aAAAxC,GACAyC,QAAAF,EAAAG,YACAC,EAAAjC,SAAAkC,eAAA,QACAD,EAAAE,MAAAJ,EAAAI,MACAF,EAAAG,OAAAL,EAAAK,OACA,MAAAC,EAAAJ,EAAAK,WAAA,MACAD,EAAAE,UAAAR,EAAA,IAAAA,EAAAI,MAAAJ,EAAAK,QACA,MAAAI,EAAAP,EAAAQ,YACA7G,QAAAoD,MAAAwD,GACAE,QAAA9G,EAAA+G,cACAC,EAAA,CACA,IAAAC,KAAA,CAAAH,GAAA,aAAAI,WAAA,CACAnC,KAAA,gBAGA9E,QAAAC,IAAA8G,EACA,OAAA/E,GACAhC,QAAAgC,MAAA,2BAAAA,EAAA5C,SAAA4C,EACA,CACA,EACAkF,cAAAA,GACA,MAAAC,EAAAhD,SAAAiD,WACAD,GAAA,KAAAE,qBAAA,KAAA3J,cAIAyJ,GAAA,KAAAE,oBAAA,KAAA3J,gBACAsC,QAAAC,IAAA,iDACA,KAAAoH,oBAAA,IALArH,QAAAC,IAAA,6CACA,KAAA6F,iBACA,KAAAuB,oBAAA,GAMA,KAAA1J,cAAAwJ,EAEA,KAAAxJ,cAAAwG,SAAAiD,UACA,EACA,gBAAAE,GACA,IACA,MAAAhC,EAAA,KAAAtH,MAAAsH,MACAc,EAAA,KAAApI,MAAAoI,OACA,IAAAmB,GAAA,QAEAtF,QAAAuF,IAAA,CACAC,EAAAA,GAAAC,iBAAAC,YAAA,WACAF,EAAAA,GAAAG,kBAAAD,YAAA,WACAF,EAAAA,GAAAI,mBAAAF,YAAA,WACAF,EAAAA,GAAAK,kBAAAH,YAAA,aAGArC,EAAAyC,gBAAAhD,UAAAU,aAAAuC,aAAA,CAAA1C,MAAA,KACA,KAAA1H,YAAA0H,EAAAyC,UACAzC,EAAAM,iBAAA,kBACA,MAAAqC,EAAA,CAAA3B,MAAAhB,EAAAgB,MAAAC,OAAAjB,EAAAiB,QACAkB,EAAAA,GAAArB,EAAA6B,GAEA/G,aAAA,UACA,MAAAgH,QAAAT,EAAAA,GAAAnC,EAAA,IAAAmC,EAAAA,IACAU,oBACAC,sBAEAC,EAAAZ,EAAAA,GAAAS,EAAAD,GACAzB,EAAAJ,EAAAK,WAAA,MACAD,EAAA8B,UAAA,IAAAlC,EAAAE,MAAAF,EAAAG,QAEA2B,EAAAK,QAAA,GACAd,EAAAA,GAAAA,eAAArB,EAAAiC,GACAZ,EAAAA,GAAAA,kBAAArB,EAAAiC,GAEAd,IAGAA,GAAA,IAGAA,GAAA,CACA,GACA,OAEA,OAAAvF,GACAhC,QAAAgC,MAAA,0BAAAA,EACA,CACA,EACAwG,iBAAAA,CAAAlD,EAAAc,GACA,MAAAI,EAAAJ,EAAAK,WAAA,MAEA,OADAD,EAAAE,UAAApB,EAAA,IAAAc,EAAAE,MAAAF,EAAAG,QACAH,EAAAQ,UAAA,YACA,EACA6B,YAAAA,GACA,KAAA3C,gBACA,EACA4C,SAAAA,GACA,QAAA9K,YAAA,CACA,MAAA2F,EAAA,KAAA3F,YAAA4F,YACAD,EAAA5E,SAAA8E,GAAAA,EAAAC,QACA,CACA,GAEAiF,aAAAA,GACAxG,OAAAyG,oBAAA,oBAAApE,oBACA,KAAAD,eACA,KAAAmE,YACA,KAAApF,mBACA,EACAuF,SAAA,KACAC,EAAAA,EAAAA,IAAA,WAEA,aAAAC,GACA,KAAAtL,iBACA,KAAA2H,2BAEA,KAAAkC,aACA,KAAA0B,cAAA9H,YAAA,KAAAgG,eAAA,KACA,KAAAA,iBACA/E,OAAAyD,iBAAA,cAAA6C,cACAtG,OAAAyD,iBAAA,oBAAApB,oBACA,KAAA7C,sBAAAlD,MAAAmD,IACA,KAAAvE,WAAAuE,CAAA,UAEA,KAAAqH,gBACA,KAAAnI,sBACA,KAAAxB,qBACA,KAAAnB,cACA,KAAA4C,WACA,KAAAJ,YACA,EACAuI,OAAAA,GACA,KAAA/L,QAAA,KAAAgM,OAAAC,OAAAjM,QACA,KAAAG,WAAA+L,aAAAC,QAAA,aACA,GC7nBgR,I,UCQ5QC,GAAY,OACd,EACAzP,EACAgD,GACA,EACA,KACA,WACA,MAIF,EAAeyM,EAAiB,O","sources":["webpack://moodle-student/./src/views/site/student/test/index.vue","webpack://moodle-student/src/views/site/student/test/index.vue","webpack://moodle-student/./src/views/site/student/test/index.vue?5da1","webpack://moodle-student/./src/views/site/student/test/index.vue?ddc2"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('section',[_c('div',{staticClass:\"test\"},[_c('div',{staticClass:\"test_left\"},[_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],attrs:{\"width\":\"500\",\"height\":\"500\",\"id\":\"fake\"}}),_c('video',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],ref:\"video\",attrs:{\"width\":\"640\",\"height\":\"480\",\"autoplay\":\"\"}}),_c('canvas',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],ref:\"canvas\",attrs:{\"width\":\"640\",\"height\":\"480\"}}),_c('img',{directives:[{name:\"show\",rawName:\"v-show\",value:(false),expression:\"false\"}],ref:\"faceImage\",attrs:{\"id\":\"faceImage\",\"alt\":\"Face Image\"}}),_c('div',{ref:\"testBody\",staticClass:\"test_body\"},[_c('div',{staticClass:\"test_subject\"},_vm._l((_vm.questions),function(question,q){return _c('div',{key:q,ref:'question_' + q,refInFor:true,staticClass:\"test_question\"},[_c('div',{staticClass:\"test_question-title pt-1\"},[_c('AppText',{attrs:{\"size\":16,\"weight\":600}},[_c('span',{domProps:{\"innerHTML\":_vm._s(question.name)}})])],1),_c('ul',{staticClass:\"test_answers pb-1\"},_vm._l((question.answers),function(item,a){return _c('li',{key:a,class:item.is_selected\n                    ? 'test_answers-title active'\n                    : 'test_answers-title',on:{\"click\":function($event){return _vm.selectAnswer(question.id, item.id)}}},[_c('AppText',{staticClass:\"mr-1\",attrs:{\"size\":_vm.isMobile ? 14 : 16,\"line-height\":_vm.isMobile ? 20 : 24,\"weight\":\"600\"}},[_vm._v(\" \"+_vm._s(_vm.answerLabels[a] + \")\")+\" \")]),_c('AppText',{attrs:{\"size\":_vm.isMobile ? 14 : 14,\"line-height\":_vm.isMobile ? 20 : 24,\"weight\":\"500\"}},[_c('span',{domProps:{\"innerHTML\":_vm._s(item.name)}})])],1)}),0)])}),0)])]),_c('div',{staticClass:\"test_right\"},[_c('div',{staticClass:\"test_pagination-top\"},[_c('span',{staticStyle:{\"font-size\":\"1.7rem\",\"max-width\":\"200px\",\"border\":\"1px solid #00b74a\",\"color\":\"#00b74a\",\"padding\":\"0 10px\"}},[_vm._v(\" \"+_vm._s(_vm.timerFormat(_vm.testTimer))+\" \")]),_c('button',{staticClass:\"btn btn-danger\",staticStyle:{\"width\":\"fit-content !important\"},on:{\"click\":_vm.checkLogOut1}},[_vm._v(\" Yopish \")])]),_c('ul',{staticClass:\"test_pagination\"},_vm._l((_vm.questions),function(question,index){return _c('li',{key:index,class:question.is_selected\n              ? 'test_pagination-item active'\n              : 'test_pagination-item',on:{\"click\":function($event){return _vm.scrollToQuestion(index)}}},[_vm._v(\" \"+_vm._s(index + 1)+\" \")])}),0),_c('div',{staticClass:\"test_pagination-bottom\"},[_c('button',{on:{\"click\":_vm.showModalClick}},[_vm._v(\"Yakunlash\")])])])]),_c('AppModal',{class:{ visible: _vm.showModal },attrs:{\"width\":300},on:{\"close\":_vm.closeModal},scopedSlots:_vm._u([{key:\"modalHeader\",fn:function(){return [_vm._v(\" Testni yakunlamoqchimisiz ?\")]},proxy:true},{key:\"modalBody\",fn:function(){return [_c('div',{staticClass:\"buttons\",on:{\"click\":_vm.closeModal}},[_c('button',{staticClass:\"btn btn-danger\"},[_vm._v(\"Yo'q\")]),_c('button',{staticClass:\"btn btn-success\",on:{\"click\":_vm.finishTest}},[_vm._v(\"Ha\")])])]},proxy:true}])}),_c('div',{staticClass:\"overlay\",class:{ visible: _vm.showModal },on:{\"click\":_vm.closeModal}})],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <section>\r\n    <div class=\"test\">\r\n      <div class=\"test_left\">\r\n        <canvas v-show=\"false\"  width=\"500\" height=\"500\" id=\"fake\"></canvas>\r\n        <video v-show=\"false\"  ref=\"video\" width=\"640\" height=\"480\" autoplay></video>\r\n        <canvas v-show=\"false\" ref=\"canvas\" width=\"640\" height=\"480\"></canvas>\r\n        <img v-show=\"false\" id=\"faceImage\" ref=\"faceImage\" alt=\"Face Image\">\r\n        <div class=\"test_body\" ref=\"testBody\">\r\n          <div class=\"test_subject\">\r\n            <div\r\n              class=\"test_question\"\r\n              v-for=\"(question, q) in questions\"\r\n              :key=\"q\"\r\n              :ref=\"'question_' + q\"\r\n            >\r\n              <div class=\"test_question-title pt-1\">\r\n                <AppText :size=\"16\" :weight=\"600\">\r\n                  <span v-html=\"question.name\"></span>\r\n                </AppText>\r\n              </div>\r\n              <ul class=\"test_answers pb-1\">\r\n                <li\r\n                  v-for=\"(item, a) in question.answers\"\r\n                  :key=\"a\"\r\n                  @click=\"selectAnswer(question.id, item.id)\"\r\n                  :class=\"\r\n                    item.is_selected\r\n                      ? 'test_answers-title active'\r\n                      : 'test_answers-title'\r\n                  \"\r\n                >\r\n                  <AppText\r\n                    :size=\"isMobile ? 14 : 16\"\r\n                    :line-height=\"isMobile ? 20 : 24\"\r\n                    weight=\"600\"\r\n                    class=\"mr-1\"\r\n                  >\r\n                    {{ answerLabels[a] + \")\" }}\r\n                  </AppText>\r\n                  <AppText\r\n                    :size=\"isMobile ? 14 : 14\"\r\n                    :line-height=\"isMobile ? 20 : 24\"\r\n                    weight=\"500\"\r\n                  >\r\n                    <span v-html=\"item.name\"></span>\r\n                  </AppText>\r\n                </li>\r\n              </ul>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div class=\"test_right\">\r\n        <div class=\"test_pagination-top\">\r\n          <span\r\n            style=\"\r\n              font-size: 1.7rem;\r\n              max-width: 200px;\r\n              border: 1px solid #00b74a;\r\n              color: #00b74a;\r\n              padding: 0 10px;\r\n            \"\r\n          >\r\n            {{ timerFormat(testTimer) }}\r\n          </span>\r\n          <button\r\n            @click=\"checkLogOut1\"\r\n            style=\"width: fit-content !important\"\r\n            class=\"btn btn-danger\"\r\n          >\r\n            Yopish\r\n          </button>\r\n        </div>\r\n        <ul class=\"test_pagination\">\r\n          <li\r\n            v-for=\"(question, index) in questions\"\r\n            :key=\"index\"\r\n            @click=\"scrollToQuestion(index)\"\r\n            :class=\"\r\n              question.is_selected\r\n                ? 'test_pagination-item active'\r\n                : 'test_pagination-item'\r\n            \"\r\n          >\r\n            {{ index + 1 }}\r\n          </li>\r\n        </ul>\r\n        <div class=\"test_pagination-bottom\">\r\n          <button @click=\"showModalClick\">Yakunlash</button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <AppModal @close=\"closeModal\" :class=\"{ visible: showModal }\" :width=\"300\">\r\n      <template #modalHeader> Testni yakunlamoqchimisiz ?</template>\r\n      <template #modalBody>\r\n        <div @click=\"closeModal\" class=\"buttons\">\r\n          <button class=\"btn btn-danger\">Yo'q</button>\r\n          <button @click=\"finishTest\" class=\"btn btn-success\">Ha</button>\r\n        </div>\r\n      </template>\r\n    </AppModal>\r\n    <div\r\n      class=\"overlay\"\r\n      :class=\"{ visible: showModal }\"\r\n      @click=\"closeModal\"\r\n    ></div>\r\n  </section>\r\n</template>\r\n<script>\r\nimport AppModal from \"@/components/shared-components/AppModal.vue\";\r\nimport { mapActions, mapGetters } from \"vuex\";\r\nimport * as faceapi from \"face-api.js\";\r\nexport default {\r\n  components: { AppModal },\r\n  name: \"AppTest\",\r\n  data() {\r\n    return {\r\n      questions: [],\r\n      select: [],\r\n      exam_id: \"\",\r\n      exam_detail: null,\r\n      ip_address: \"\",\r\n      student_id: \"\",\r\n      answerLabels: [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"],\r\n      testTimer: 0,\r\n      activeP: 0,\r\n      showModal: false,\r\n      screenStream: null,\r\n      isScreenSharing: false,\r\n      isStartStream: false,\r\n      isPageInFocus: true,\r\n      videoStream: null,\r\n    };\r\n  },\r\n  methods: {\r\n    ...mapActions([\"getUser\"]),\r\n    scrollToQuestion(index) {\r\n      const testElement = this.$refs[\"question_\" + index][0];\r\n      if (testElement) {\r\n        testElement.scrollIntoView({ behavior: \"smooth\" });\r\n      }\r\n      this.activeP = index;\r\n    },\r\n\r\n    async getExamTest() {\r\n      this.loading = true;\r\n      await this.$http\r\n        .post(`test/begin/`, {\r\n          exam: this.exam_id,\r\n          ip_address: this.ip_address,\r\n          student: this.student_id,\r\n        })\r\n        .then((response) => {\r\n          response.forEach((element) => {\r\n            let model = {\r\n              id: element.id,\r\n              name: element.name,\r\n              answers: element.answers.map((answer) => ({\r\n                ...answer,\r\n                is_selected: false,\r\n              })),\r\n              is_selected: false,\r\n            };\r\n            this.questions.push(model);\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          this.notificationMessage(err.response.data.message, \"error\");\r\n        })\r\n        .finally(() => {\r\n          this.loading = false;\r\n        });\r\n    },\r\n    async resultCreate() {\r\n      const result = {\r\n        exam: this.exam_id,\r\n        student: this.student_id,\r\n        group: this.user.group.id,\r\n        ip_address: this.ip_address,\r\n        attempts: this.exam_detail.attempts,\r\n        total_count: this.exam_detail.total_count,\r\n        max_score: this.exam_detail.max_score,\r\n        is_start: true,\r\n        exam_time: this.exam_detail.exam_time,\r\n      };\r\n      await this.$http\r\n        .post(`result/create`, result)\r\n        .then((res) => {\r\n          console.log(\"res\", res);\r\n          this.testTimer = Math.abs(res.exam_time_second);\r\n        })\r\n        .catch((err) => {\r\n          if (err.response && err.response.data) {\r\n            const errors = err.response.data;\r\n            for (const key in errors) {\r\n              if (Object.hasOwnProperty.call(errors, key)) {\r\n                const errorMessages = errors[key];\r\n                this.notificationMessage(\r\n                  `${key}: ${errorMessages.join(\", \")}`,\r\n                  \"error\"\r\n                );\r\n              }\r\n            }\r\n          }\r\n        })\r\n        .finally(() => {});\r\n    },\r\n    getDefault() {\r\n      this.$http\r\n        .get(\r\n          `student-select-answers-get/${this.exam_id}/for/${this.student_id}/`\r\n        )\r\n        .then((res) => {\r\n          this.select = res.data;\r\n          this.collectSelect();\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n    async getExamDetail() {\r\n      await this.$http\r\n        .get(`exam-detail/${this.exam_id}`)\r\n        .then((res) => {\r\n          this.exam_detail = res;\r\n        })\r\n        .catch(() => {})\r\n        .finally(() => {});\r\n    },\r\n    setTimer() {\r\n      let _this = this;\r\n      let testTimerInterval = setInterval(function () {\r\n        if (_this.testTimer / 60 <= 0) {\r\n          _this.finishTest();\r\n          clearInterval(testTimerInterval);\r\n          return;\r\n        }\r\n        _this.testTimer--;\r\n      }, 1000);\r\n    },\r\n    timerFormat(time) {\r\n      let sec_num = parseInt(time, 10);\r\n      let hours = Math.floor(sec_num / 3600);\r\n      let minutes = Math.floor((sec_num - hours * 3600) / 60);\r\n      let seconds = sec_num - hours * 3600 - minutes * 60;\r\n\r\n      if (hours < 10) {\r\n        hours = \"0\" + hours;\r\n      }\r\n      if (minutes < 10) {\r\n        minutes = \"0\" + minutes;\r\n      }\r\n      if (seconds < 10) {\r\n        seconds = \"0\" + seconds;\r\n      }\r\n      return hours + \":\" + minutes + \":\" + seconds;\r\n    },\r\n    // async fetchLocalIPAddress() {\r\n    //   return new Promise((resolve) => {\r\n    //     window.RTCPeerConnection =\r\n    //         window.RTCPeerConnection ||\r\n    //         window.mozRTCPeerConnection ||\r\n    //         window.webkitRTCPeerConnection;\r\n    //\r\n    //     const pc = new RTCPeerConnection();\r\n    //\r\n    //     pc.createDataChannel(\"\");\r\n    //\r\n    //     pc.createOffer().then((offer) => {\r\n    //       pc.setLocalDescription(offer);\r\n    //     });\r\n    //\r\n    //     pc.onicecandidate = (e) => {\r\n    //       if (e && e.candidate && e.candidate.candidate) {\r\n    //         const ipRegex = /\\d+\\.\\d+\\.\\d+\\.\\d+/;\r\n    //         const match = ipRegex.exec(e.candidate.candidate);\r\n    //\r\n    //         if (match) {\r\n    //           const ipAddress = match[0];\r\n    //           resolve(ipAddress);\r\n    //           this.ip_address = ipAddress;\r\n    //         }\r\n    //       }\r\n    //\r\n    //       // Always clear the event handler and close the connection\r\n    //       pc.onicecandidate = null;\r\n    //       pc.close();\r\n    //     };\r\n    //   });\r\n    // },\r\n    async fetchLocalIPAddress() {\r\n      try {\r\n        const ipAddress = await this.getIPAddressViaWebRTC();\r\n        if (ipAddress) {\r\n          return ipAddress;\r\n        }\r\n        const localIPAddress = await this.getIPAddressViaService();\r\n        if (localIPAddress) {\r\n          return localIPAddress;\r\n        }\r\n        return null;\r\n      } catch (error) {\r\n        console.error(\"Error fetching local IP address:\", error);\r\n        return null;\r\n      }\r\n    },\r\n\r\n    async getIPAddressViaWebRTC() {\r\n      return new Promise((resolve) => {\r\n        window.RTCPeerConnection =\r\n          window.RTCPeerConnection ||\r\n          window.mozRTCPeerConnection ||\r\n          window.webkitRTCPeerConnection;\r\n\r\n        const pc = new RTCPeerConnection();\r\n\r\n        pc.createDataChannel(\"\");\r\n\r\n        pc.createOffer().then((offer) => {\r\n          pc.setLocalDescription(offer);\r\n        });\r\n\r\n        pc.onicecandidate = (e) => {\r\n          if (e && e.candidate && e.candidate.candidate) {\r\n            const ipRegex = /\\d+\\.\\d+\\.\\d+\\.\\d+/;\r\n            const match = ipRegex.exec(e.candidate.candidate);\r\n\r\n            if (match) {\r\n              const ipAddress = match[0];\r\n              resolve(ipAddress);\r\n            }\r\n          }\r\n\r\n          // Always clear the event handler and close the connection\r\n          pc.onicecandidate = null;\r\n          pc.close();\r\n        };\r\n      });\r\n    },\r\n\r\n    async getIPAddressViaService() {\r\n      try {\r\n        // Use a third-party service to get the public IP address\r\n        const response = await fetch(\"https://api.ipify.org?format=json\");\r\n        const data = await response.json();\r\n\r\n        // Extract the IP address from the response\r\n        return data.ip;\r\n      } catch (error) {\r\n        console.error(\"Error fetching IP address via service:\", error);\r\n        return null;\r\n      }\r\n    },\r\n    stopScreenSharing() {\r\n\r\n      if (this.screenStream) {\r\n        const tracks = this.screenStream.getTracks();\r\n        tracks.forEach((track) => track.stop());\r\n        this.isStartStream = false;\r\n        console.log('Screen sharing stream stopped');\r\n      }\r\n    },\r\n    selectAnswer(questionId, answerId) {\r\n      this.fetchLocalIPAddress().then((ipAddress) => {\r\n        this.ip_address = ipAddress;\r\n      });\r\n      this.$http\r\n        .patch(`student-exam-answers/${this.exam_id}/for/${this.student_id}/`, {\r\n          question: questionId,\r\n          is_selected: answerId,\r\n          ip_address: this.ip_address,\r\n        })\r\n        .then((res) => {\r\n          this.select = res;\r\n          this.collectSelect();\r\n          console.log(this.questions);\r\n          console.log(res);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        })\r\n        .finally(() => {});\r\n    },\r\n    collectSelect() {\r\n      this.select.forEach((pair) => {\r\n        const questionId = pair.question;\r\n        const answerId = pair.is_selected;\r\n        const selectedQuestion = this.questions.find(\r\n          (q) => q.id === questionId\r\n        );\r\n        if (selectedQuestion) {\r\n          selectedQuestion.is_selected = true;\r\n          selectedQuestion.answers.forEach((answer) => {\r\n            answer.is_selected = false;\r\n          });\r\n          const selectedAnswer = selectedQuestion.answers.find(\r\n            (a) => a.id === answerId\r\n          );\r\n          if (selectedAnswer) {\r\n            selectedAnswer.is_selected = true;\r\n          }\r\n        }\r\n      });\r\n    },\r\n    finishTest() {\r\n      this.$http\r\n        .get(`exam-finish/${this.exam_id}/finish/${this.student_id}/`)\r\n        .then(() => {\r\n          this.$router.push({\r\n            name: \"test-exams\",\r\n          });\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    },\r\n\r\n    closeModal() {\r\n      this.showModal = false;\r\n      document.body.style.overflowY = \"scroll\";\r\n    },\r\n    showModalClick() {\r\n      this.showModal = true;\r\n      document.body.style.overflowY = \"hidden\";\r\n    },\r\n    checkLogOut1() {\r\n      this.$http\r\n        .post(\"check-logout/\", {\r\n          exam: this.exam_id,\r\n          student: this.student_id,\r\n        })\r\n        .then(() => {\r\n          this.$router.push({\r\n            name: \"test-exams\",\r\n          });\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    checkLogOut2() {\r\n      this.$http\r\n        .post(\"check-logout/\", {\r\n          exam: this.exam_id,\r\n          student: this.student_id,\r\n        })\r\n        .then(() => {\r\n\r\n        })\r\n        .catch(() => {});\r\n    },\r\n    handleBeforeUnload(event) {\r\n\r\n      const data = {\r\n        exam: this.exam_id,\r\n        student: this.student_id,\r\n      };\r\n\r\n      const blob = new Blob([JSON.stringify(data)], {\r\n        type: \"application/json\",\r\n      });\r\n      navigator.sendBeacon(\"https://api.fastlms.uz/api/check-logout/\", blob);\r\n      event.preventDefault();\r\n      if (this.isStartStream) {\r\n        const confirmationMessage = 'You are currently screen sharing. Are you sure you want to leave?';\r\n        event.returnValue = confirmationMessage;\r\n        return confirmationMessage;\r\n      }\r\n    },\r\n    async startScreenSharing() {\r\n      try {\r\n        const displayMediaOptions = {\r\n          video: {\r\n            mediaSource: 'screen',\r\n            displaySurface: \"monitor\"\r\n          }\r\n        };\r\n        if (navigator.mediaDevices.getDisplayMedia) {\r\n          navigator.mediaDevices.getDisplayMedia(displayMediaOptions).then((success) => {\r\n            success.addEventListener('inactive', () => {\r\n              this.isStartStream = false\r\n              console.log('Screen capture stream has stopped');\r\n            });\r\n            this.isStartStream = true\r\n            this.screenStream = success\r\n            this.enterFullscreen()\r\n          }).catch((error) => {\r\n            console.log(error)\r\n          });\r\n        } else {\r\n          navigator.getDisplayMedia(displayMediaOptions).then((success) => {\r\n            success.addEventListener('inactive', () => {\r\n              this.isStartStream = false\r\n              console.log('Screen capture stream has stopped');\r\n            });\r\n            this.isStartStream = true\r\n            this.screenStream = success\r\n            this.enterFullscreen()\r\n          }).catch((error) => {\r\n            console.log(error)\r\n          });\r\n        }\r\n\r\n        window.addEventListener('beforeunload', this.handleBeforeUnload);\r\n      } catch (error) {\r\n        console.error('Error accessing screen:', error.message || error);\r\n      }\r\n    },\r\n    async takeScreenShot() {\r\n      try {\r\n        const track = this.screenStream.getVideoTracks()[0];\r\n        const imageCapture = new ImageCapture(track);\r\n        const bitmap = await imageCapture.grabFrame();\r\n        const canvas = document.getElementById('fake');\r\n        canvas.width = bitmap.width;\r\n        canvas.height = bitmap.height;\r\n        const context = canvas.getContext('2d');\r\n        context.drawImage(bitmap, 0, 0, bitmap.width, bitmap.height);\r\n        const image = canvas.toDataURL();\r\n        const res = await fetch(image);\r\n        const buff = await res.arrayBuffer();\r\n        const file = [\r\n          new File([buff], `photo_${new Date()}.jpg`, {\r\n            type: 'image/jpeg',\r\n          }),\r\n        ];\r\n        console.log(file);\r\n      } catch (error) {\r\n        console.error('Error taking screenshot:', error.message || error);\r\n      }\r\n    },\r\n    checkPageFocus() {\r\n      const isCurrentlyInFocus = document.hasFocus();\r\n      if (!isCurrentlyInFocus && !this.hasTakenScreenshot && this.isStartStream) {\r\n        console.log('Page has lost focus. Taking screenshot...');\r\n        this.takeScreenShot();\r\n        this.hasTakenScreenshot = true;\r\n      } else if (isCurrentlyInFocus && this.hasTakenScreenshot && this.isStartStream) {\r\n        console.log('Page has regained focus. Taking screenshot...');\r\n        this.hasTakenScreenshot = false;\r\n      }\r\n\r\n      this.isPageInFocus = isCurrentlyInFocus;\r\n\r\n      this.isPageInFocus = document.hasFocus();\r\n    },\r\n    async startVideo() {\r\n      try {\r\n        const video = this.$refs.video;\r\n        const canvas = this.$refs.canvas;\r\n        let faceDetected = false; // Variable to track if a face was previously detected\r\n\r\n        await Promise.all([\r\n          faceapi.nets.tinyFaceDetector.loadFromUri('/models'),\r\n          faceapi.nets.faceLandmark68Net.loadFromUri('/models'),\r\n          faceapi.nets.faceRecognitionNet.loadFromUri('/models'),\r\n          faceapi.nets.faceExpressionNet.loadFromUri('/models'),\r\n        ]);\r\n\r\n        video.srcObject = await navigator.mediaDevices.getUserMedia({ video: {} });\r\n        this.videoStream = video.srcObject;\r\n        video.addEventListener('play', async () => {\r\n          const displaySize = { width: video.width, height: video.height };\r\n          faceapi.matchDimensions(canvas, displaySize);\r\n\r\n          setInterval(async () => {\r\n            const detections = await faceapi.detectAllFaces(video, new faceapi.TinyFaceDetectorOptions())\r\n                .withFaceLandmarks()\r\n                .withFaceDescriptors();\r\n\r\n            const resizedDetections = faceapi.resizeResults(detections, displaySize);\r\n            const context = canvas.getContext('2d');\r\n            context.clearRect(0, 0, canvas.width, canvas.height);\r\n\r\n            if (detections.length <= 0) {\r\n              faceapi.draw.drawDetections(canvas, resizedDetections);\r\n              faceapi.draw.drawFaceLandmarks(canvas, resizedDetections);\r\n\r\n              if (!faceDetected) {\r\n                // const screenshotDataUrl = this.captureVideoFrame(video, canvas);\r\n                // console.log('Face Detected - Video Frame Data URL:', screenshotDataUrl);\r\n                faceDetected = true;\r\n              }\r\n            } else {\r\n              faceDetected = false;\r\n            }\r\n          }, 100);\r\n        });\r\n      } catch (error) {\r\n        console.error('Error accessing webcam:', error);\r\n      }\r\n    },\r\n    captureVideoFrame(video, canvas) {\r\n      const context = canvas.getContext('2d');\r\n      context.drawImage(video, 0, 0, canvas.width, canvas.height);\r\n      return canvas.toDataURL('image/png');\r\n    },\r\n    handleResize() {\r\n      this.takeScreenShot()\r\n    },\r\n    stopVideo() {\r\n      if (this.videoStream) {\r\n        const tracks = this.videoStream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n    },\r\n  },\r\n  beforeDestroy() {\r\n    window.removeEventListener(\"beforeunload\", this.handleBeforeUnload);\r\n    this.checkLogOut2();\r\n    this.stopVideo();\r\n    this.stopScreenSharing()\r\n  },\r\n  computed: {\r\n    ...mapGetters([\"user\"]),\r\n  },\r\n  async mounted() {\r\n    if(!this.isScreenSharing){\r\n      this.startScreenSharing()\r\n    }\r\n    await this.startVideo()\r\n    this.focusInterval = setInterval(this.checkPageFocus, 500);\r\n    this.checkPageFocus();\r\n    window.addEventListener('resize', this.handleResize);\r\n    window.addEventListener(\"beforeunload\", this.handleBeforeUnload);\r\n    this.fetchLocalIPAddress().then((ipAddress) => {\r\n      this.ip_address = ipAddress;\r\n    });\r\n    await this.getUser();\r\n    await this.getExamDetail();\r\n    await this.resultCreate();\r\n    await this.getExamTest();\r\n    this.setTimer();\r\n    this.getDefault();\r\n  },\r\n  created() {\r\n    this.exam_id = this.$route.params.exam_id;\r\n    this.student_id = localStorage.getItem(\"student_id\");\r\n  },\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.buttons {\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: row-reverse;\r\n  justify-content: space-around;\r\n}\r\nsection {\r\n  height: calc(100vh - 150px);\r\n}\r\n.test {\r\n  display: grid;\r\n  grid-template-columns: 8fr 4fr;\r\n  gap: 40px;\r\n  height: 100%;\r\n  overflow: hidden;\r\n  &_left {\r\n    overflow: auto;\r\n  }\r\n  &_right {\r\n  }\r\n  &_question {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    background-color: white;\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n    margin-bottom: 20px;\r\n  }\r\n  &_question-title {\r\n    padding: 5px 15px;\r\n  }\r\n  &_answers {\r\n    display: flex;\r\n    flex-direction: column;\r\n    gap: 10px;\r\n    cursor: pointer;\r\n  }\r\n  &_answers-title {\r\n    display: flex;\r\n    align-items: flex-start;\r\n    padding: 5px 15px;\r\n    transition: all 0.3s ease;\r\n    &:hover {\r\n      background-color: #008bf8;\r\n      color: #fff;\r\n    }\r\n    &.active {\r\n      background-color: #00b74a;\r\n      color: #fff;\r\n    }\r\n  }\r\n  &_title {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    padding: 8px 16px;\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n  }\r\n  &_pagination {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    gap: 0.5rem;\r\n    padding: 1rem;\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n  }\r\n  &_pagination-bottom {\r\n    background-color: #fff;\r\n    padding: 1rem;\r\n    box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15) !important;\r\n    border-top: 1px solid #e0e0e0;\r\n    button {\r\n      font-size: 1rem;\r\n      font-weight: 500;\r\n      padding: 0.375rem 1.5rem;\r\n      line-height: 1.5;\r\n      text-align: center;\r\n      background-color: #dc4c64;\r\n      color: #fff;\r\n      box-shadow: 0 8px 9px -4px rgba(0, 0, 0, 0.15),\r\n        0 4px 18px 0 rgba(0, 0, 0, 0.1);\r\n    }\r\n  }\r\n\r\n  &_pagination-top {\r\n    background-color: #fff;\r\n    padding: 1rem;\r\n    border-bottom: 1px solid #e0e0e0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n  }\r\n  &_pagination-item {\r\n    width: 30px;\r\n    height: 30px;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid #00b74a;\r\n    color: #00b74a;\r\n    background-color: #fff;\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n    &.active {\r\n      color: #fff;\r\n      background-color: #00b74a;\r\n    }\r\n  }\r\n}\r\n</style>\r\n","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./index.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./index.vue?vue&type=template&id=2f5bc65f&scoped=true&\"\nimport script from \"./index.vue?vue&type=script&lang=js&\"\nexport * from \"./index.vue?vue&type=script&lang=js&\"\nimport style0 from \"./index.vue?vue&type=style&index=0&id=2f5bc65f&prod&lang=scss&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"2f5bc65f\",\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","staticClass","directives","name","rawName","value","expression","attrs","ref","_l","questions","question","q","key","refInFor","domProps","_s","answers","item","a","class","is_selected","on","$event","selectAnswer","id","isMobile","_v","answerLabels","staticStyle","timerFormat","testTimer","checkLogOut1","index","scrollToQuestion","showModalClick","visible","showModal","closeModal","scopedSlots","_u","fn","proxy","finishTest","staticRenderFns","components","AppModal","data","select","exam_id","exam_detail","ip_address","student_id","activeP","screenStream","isScreenSharing","isStartStream","isPageInFocus","videoStream","methods","mapActions","testElement","$refs","scrollIntoView","behavior","getExamTest","loading","$http","post","exam","student","then","response","forEach","element","model","map","answer","push","catch","err","notificationMessage","message","finally","resultCreate","result","group","user","attempts","total_count","max_score","is_start","exam_time","res","console","log","Math","abs","exam_time_second","errors","Object","hasOwnProperty","call","errorMessages","join","getDefault","get","collectSelect","getExamDetail","setTimer","_this","testTimerInterval","setInterval","clearInterval","time","sec_num","parseInt","hours","floor","minutes","seconds","fetchLocalIPAddress","ipAddress","getIPAddressViaWebRTC","localIPAddress","getIPAddressViaService","error","Promise","resolve","window","RTCPeerConnection","mozRTCPeerConnection","webkitRTCPeerConnection","pc","createDataChannel","createOffer","offer","setLocalDescription","onicecandidate","e","candidate","ipRegex","match","exec","close","fetch","json","ip","stopScreenSharing","tracks","getTracks","track","stop","questionId","answerId","patch","pair","selectedQuestion","find","selectedAnswer","$router","document","body","style","overflowY","checkLogOut2","handleBeforeUnload","event","blob","Blob","JSON","stringify","type","navigator","sendBeacon","preventDefault","confirmationMessage","returnValue","startScreenSharing","displayMediaOptions","video","mediaSource","displaySurface","mediaDevices","getDisplayMedia","success","addEventListener","enterFullscreen","takeScreenShot","getVideoTracks","imageCapture","ImageCapture","bitmap","grabFrame","canvas","getElementById","width","height","context","getContext","drawImage","image","toDataURL","buff","arrayBuffer","file","File","Date","checkPageFocus","isCurrentlyInFocus","hasFocus","hasTakenScreenshot","startVideo","faceDetected","all","faceapi","tinyFaceDetector","loadFromUri","faceLandmark68Net","faceRecognitionNet","faceExpressionNet","srcObject","getUserMedia","displaySize","detections","withFaceLandmarks","withFaceDescriptors","resizedDetections","clearRect","length","captureVideoFrame","handleResize","stopVideo","beforeDestroy","removeEventListener","computed","mapGetters","mounted","focusInterval","getUser","created","$route","params","localStorage","getItem","component"],"sourceRoot":""}